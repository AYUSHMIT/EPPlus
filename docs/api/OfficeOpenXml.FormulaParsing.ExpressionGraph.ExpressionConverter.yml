### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter
  commentId: T:OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter
  id: ExpressionConverter
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph
  children:
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.Instance
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  langs:
  - csharp
  - vb
  name: ExpressionConverter
  nameWithType: ExpressionConverter
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExpressionGraph/ExpressionConverter.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExpressionConverter
    path: ../src/EPPlus/FormulaParsing/ExpressionGraph/ExpressionConverter.cs
    startLine: 21
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExpressionGraph
  syntax:
    content: 'public class ExpressionConverter : IExpressionConverter'
    content.vb: >-
      Public Class ExpressionConverter
          Implements IExpressionConverter
  inheritance:
  - System.Object
  implements:
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  commentId: M:OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  id: ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter
  langs:
  - csharp
  - vb
  name: ToStringExpression(Expression)
  nameWithType: ExpressionConverter.ToStringExpression(Expression)
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExpressionGraph/ExpressionConverter.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ToStringExpression
    path: ../src/EPPlus/FormulaParsing/ExpressionGraph/ExpressionConverter.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExpressionGraph
  syntax:
    content: public StringExpression ToStringExpression(Expression expression)
    parameters:
    - id: expression
      type: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
    return:
      type: OfficeOpenXml.FormulaParsing.ExpressionGraph.StringExpression
    content.vb: Public Function ToStringExpression(expression As Expression) As StringExpression
  overload: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.ToStringExpression*
  implements:
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
  commentId: M:OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
  id: FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter
  langs:
  - csharp
  - vb
  name: FromCompileResult(CompileResult)
  nameWithType: ExpressionConverter.FromCompileResult(CompileResult)
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExpressionGraph/ExpressionConverter.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FromCompileResult
    path: ../src/EPPlus/FormulaParsing/ExpressionGraph/ExpressionConverter.cs
    startLine: 40
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExpressionGraph
  syntax:
    content: public Expression FromCompileResult(CompileResult compileResult)
    parameters:
    - id: compileResult
      type: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult
    return:
      type: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
    content.vb: Public Function FromCompileResult(compileResult As CompileResult) As Expression
  overload: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.FromCompileResult*
  implements:
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.Instance
  commentId: P:OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.Instance
  id: Instance
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ExpressionConverter.Instance
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.Instance
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExpressionGraph/ExpressionConverter.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Instance
    path: ../src/EPPlus/FormulaParsing/ExpressionGraph/ExpressionConverter.cs
    startLine: 84
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExpressionGraph
  syntax:
    content: public static IExpressionConverter Instance { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter
    content.vb: Public Shared ReadOnly Property Instance As IExpressionConverter
  overload: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph
  commentId: N:OfficeOpenXml.FormulaParsing.ExpressionGraph
  name: OfficeOpenXml.FormulaParsing.ExpressionGraph
  nameWithType: OfficeOpenXml.FormulaParsing.ExpressionGraph
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter
  commentId: T:OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph
  name: IExpressionConverter
  nameWithType: IExpressionConverter
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.ToStringExpression*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.ToStringExpression
  name: ToStringExpression
  nameWithType: ExpressionConverter.ToStringExpression
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.ToStringExpression
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  commentId: M:OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter
  name: ToStringExpression(Expression)
  nameWithType: IExpressionConverter.ToStringExpression(Expression)
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
    name: ToStringExpression
    nameWithType: IExpressionConverter.ToStringExpression
    fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.ToStringExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
    name: Expression
    nameWithType: Expression
    fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.ToStringExpression(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
    name: ToStringExpression
    nameWithType: IExpressionConverter.ToStringExpression
    fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.ToStringExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
    name: Expression
    nameWithType: Expression
    fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
  commentId: T:OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph
  name: Expression
  nameWithType: Expression
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.StringExpression
  commentId: T:OfficeOpenXml.FormulaParsing.ExpressionGraph.StringExpression
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph
  name: StringExpression
  nameWithType: StringExpression
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.StringExpression
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.FromCompileResult*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.FromCompileResult
  name: FromCompileResult
  nameWithType: ExpressionConverter.FromCompileResult
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.FromCompileResult
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
  commentId: M:OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter
  name: FromCompileResult(CompileResult)
  nameWithType: IExpressionConverter.FromCompileResult(CompileResult)
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
    name: FromCompileResult
    nameWithType: IExpressionConverter.FromCompileResult
    fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.FromCompileResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult
    name: CompileResult
    nameWithType: CompileResult
    fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.FromCompileResult(OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult)
    name: FromCompileResult
    nameWithType: IExpressionConverter.FromCompileResult
    fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.IExpressionConverter.FromCompileResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult
    name: CompileResult
    nameWithType: CompileResult
    fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult
  commentId: T:OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph
  name: CompileResult
  nameWithType: CompileResult
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileResult
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.Instance*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.Instance
  name: Instance
  nameWithType: ExpressionConverter.Instance
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.ExpressionConverter.Instance

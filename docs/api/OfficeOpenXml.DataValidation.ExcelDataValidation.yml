### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation
  commentId: T:OfficeOpenXml.DataValidation.ExcelDataValidation
  id: ExcelDataValidation
  parent: OfficeOpenXml.DataValidation
  children:
  - OfficeOpenXml.DataValidation.ExcelDataValidation.Address
  - OfficeOpenXml.DataValidation.ExcelDataValidation.AllowBlank
  - OfficeOpenXml.DataValidation.ExcelDataValidation.AllowsOperator
  - OfficeOpenXml.DataValidation.ExcelDataValidation.As
  - OfficeOpenXml.DataValidation.ExcelDataValidation.Error
  - OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorStyle
  - OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorTitle
  - OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal
  - OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal
  - OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula1Path
  - OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula2Path
  - OfficeOpenXml.DataValidation.ExcelDataValidation.OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#IsStale
  - OfficeOpenXml.DataValidation.ExcelDataValidation.Operator
  - OfficeOpenXml.DataValidation.ExcelDataValidation.Prompt
  - OfficeOpenXml.DataValidation.ExcelDataValidation.PromptTitle
  - OfficeOpenXml.DataValidation.ExcelDataValidation.SetNullableBoolValue(System.String,System.Nullable{System.Boolean})
  - OfficeOpenXml.DataValidation.ExcelDataValidation.SetValue``1(System.Nullable{``0},System.String)
  - OfficeOpenXml.DataValidation.ExcelDataValidation.ShowErrorMessage
  - OfficeOpenXml.DataValidation.ExcelDataValidation.ShowInputMessage
  - OfficeOpenXml.DataValidation.ExcelDataValidation.Uid
  - OfficeOpenXml.DataValidation.ExcelDataValidation.Validate
  - OfficeOpenXml.DataValidation.ExcelDataValidation.ValidationType
  langs:
  - csharp
  - vb
  name: ExcelDataValidation
  nameWithType: ExcelDataValidation
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation
  type: Class
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelDataValidation
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 29
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nAbstract base class for all Excel datavalidations. Contains functionlity which is common for all these different validation types.\n"
  example: []
  syntax:
    content: 'public abstract class ExcelDataValidation : XmlHelper, IExcelDataValidation'
    content.vb: >-
      Public MustInherit Class ExcelDataValidation
          Inherits XmlHelper
          Implements IExcelDataValidation
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  derivedClasses:
  - OfficeOpenXml.DataValidation.ExcelDataValidationAny
  - OfficeOpenXml.DataValidation.ExcelDataValidationWithFormula`1
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#IsStale
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#IsStale
  id: OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#IsStale
  isEii: true
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: IExcelDataValidation.IsStale
  nameWithType: ExcelDataValidation.IExcelDataValidation.IsStale
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 112
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nIndicates whether this instance is stale, see https://github.com/EPPlusSoftware/EPPlus/wiki/Data-validation-Exceptions\n"
  example: []
  syntax:
    content: bool IExcelDataValidation.IsStale { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale As Boolean Implements IExcelDataValidation.IsStale
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#IsStale*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
  nameWithType.vb: ExcelDataValidation.OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.SetNullableBoolValue(System.String,System.Nullable{System.Boolean})
  commentId: M:OfficeOpenXml.DataValidation.ExcelDataValidation.SetNullableBoolValue(System.String,System.Nullable{System.Boolean})
  id: SetNullableBoolValue(System.String,System.Nullable{System.Boolean})
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: SetNullableBoolValue(String, Nullable<Boolean>)
  nameWithType: ExcelDataValidation.SetNullableBoolValue(String, Nullable<Boolean>)
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.SetNullableBoolValue(System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetNullableBoolValue
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 235
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  syntax:
    content: protected void SetNullableBoolValue(string path, bool? val)
    parameters:
    - id: path
      type: System.String
    - id: val
      type: System.Nullable{System.Boolean}
    content.vb: Protected Sub SetNullableBoolValue(path As String, val As Boolean?)
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.SetNullableBoolValue*
  nameWithType.vb: ExcelDataValidation.SetNullableBoolValue(String, Nullable(Of Boolean))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: OfficeOpenXml.DataValidation.ExcelDataValidation.SetNullableBoolValue(System.String, System.Nullable(Of System.Boolean))
  name.vb: SetNullableBoolValue(String, Nullable(Of Boolean))
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Validate
  commentId: M:OfficeOpenXml.DataValidation.ExcelDataValidation.Validate
  id: Validate
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ExcelDataValidation.Validate()
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Validate()
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Validate
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 251
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nThis method will validate the state of the validation\n"
  example: []
  syntax:
    content: public virtual void Validate()
    content.vb: Public Overridable Sub Validate
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.Validate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: If the state breaks the rules of the validation
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Validate
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowsOperator
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.AllowsOperator
  id: AllowsOperator
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: AllowsOperator
  nameWithType: ExcelDataValidation.AllowsOperator
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowsOperator
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AllowsOperator
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 271
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nTrue if the validation type allows operator to be set.\n"
  example: []
  syntax:
    content: public bool AllowsOperator { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllowsOperator As Boolean
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowsOperator*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.AllowsOperator
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Uid
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.Uid
  id: Uid
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: Uid
  nameWithType: ExcelDataValidation.Uid
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Uid
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Uid
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 282
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nUuid of the data validation\n"
  example: []
  syntax:
    content: public string Uid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Uid As String
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.Uid*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Uid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Address
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.Address
  id: Address
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: ExcelDataValidation.Address
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Address
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Address
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 300
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nAddress of data validation\n"
  example: []
  syntax:
    content: public ExcelAddress Address { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ExcelAddress
    content.vb: Public ReadOnly Property Address As ExcelAddress
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.Address*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Address
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ValidationType
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.ValidationType
  id: ValidationType
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: ValidationType
  nameWithType: ExcelDataValidation.ValidationType
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ValidationType
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ValidationType
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 314
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nValidation type\n"
  example: []
  syntax:
    content: public ExcelDataValidationType ValidationType { get; }
    parameters: []
    return:
      type: OfficeOpenXml.DataValidation.ExcelDataValidationType
    content.vb: Public ReadOnly Property ValidationType As ExcelDataValidationType
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.ValidationType*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ValidationType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Operator
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.Operator
  id: Operator
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: Operator
  nameWithType: ExcelDataValidation.Operator
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Operator
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Operator
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 330
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nOperator for comparison between the entered value and Formula/Formulas.\n"
  example: []
  syntax:
    content: public ExcelDataValidationOperator Operator { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.DataValidation.ExcelDataValidationOperator
    content.vb: Public Property Operator As ExcelDataValidationOperator
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.Operator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorStyle
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorStyle
  id: ErrorStyle
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: ErrorStyle
  nameWithType: ExcelDataValidation.ErrorStyle
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorStyle
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ErrorStyle
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 355
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nWarning style\n"
  example: []
  syntax:
    content: public ExcelDataValidationWarningStyle ErrorStyle { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.DataValidation.ExcelDataValidationWarningStyle
    content.vb: Public Property ErrorStyle As ExcelDataValidationWarningStyle
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorStyle*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ErrorStyle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowBlank
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.AllowBlank
  id: AllowBlank
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: AllowBlank
  nameWithType: ExcelDataValidation.AllowBlank
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowBlank
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AllowBlank
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 383
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nTrue if blanks should be allowed\n"
  example: []
  syntax:
    content: public bool? AllowBlank { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property AllowBlank As Boolean?
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowBlank*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.AllowBlank
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowInputMessage
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.ShowInputMessage
  id: ShowInputMessage
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: ShowInputMessage
  nameWithType: ExcelDataValidation.ShowInputMessage
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowInputMessage
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ShowInputMessage
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 399
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nTrue if input message should be shown\n"
  example: []
  syntax:
    content: public bool? ShowInputMessage { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property ShowInputMessage As Boolean?
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowInputMessage*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ShowInputMessage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowErrorMessage
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.ShowErrorMessage
  id: ShowErrorMessage
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: ShowErrorMessage
  nameWithType: ExcelDataValidation.ShowErrorMessage
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowErrorMessage
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ShowErrorMessage
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 415
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nTrue if error message should be shown\n"
  example: []
  syntax:
    content: public bool? ShowErrorMessage { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property ShowErrorMessage As Boolean?
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowErrorMessage*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ShowErrorMessage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorTitle
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorTitle
  id: ErrorTitle
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: ErrorTitle
  nameWithType: ExcelDataValidation.ErrorTitle
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorTitle
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ErrorTitle
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 431
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nTitle of error message box\n"
  example: []
  syntax:
    content: public string ErrorTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ErrorTitle As String
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorTitle*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ErrorTitle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Error
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.Error
  id: Error
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: ExcelDataValidation.Error
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Error
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Error
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 455
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nError message box text\n"
  example: []
  syntax:
    content: public string Error { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Error As String
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.Error*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Error
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.PromptTitle
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.PromptTitle
  id: PromptTitle
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: PromptTitle
  nameWithType: ExcelDataValidation.PromptTitle
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.PromptTitle
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PromptTitle
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 478
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nTitle of the validation message box.\n"
  example: []
  syntax:
    content: public string PromptTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PromptTitle As String
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.PromptTitle*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.PromptTitle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Prompt
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.Prompt
  id: Prompt
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: Prompt
  nameWithType: ExcelDataValidation.Prompt
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Prompt
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Prompt
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 494
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nText of the validation message box.\n"
  example: []
  syntax:
    content: public string Prompt { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Prompt As String
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.Prompt*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Prompt
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal
  id: Formula1Internal
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: Formula1Internal
  nameWithType: ExcelDataValidation.Formula1Internal
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Formula1Internal
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 510
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nFormula 1\n"
  example: []
  syntax:
    content: protected string Formula1Internal { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property Formula1Internal As String
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal
  id: Formula2Internal
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: Formula2Internal
  nameWithType: ExcelDataValidation.Formula2Internal
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Formula2Internal
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 521
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nFormula 2\n"
  example: []
  syntax:
    content: protected string Formula2Internal { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property Formula2Internal As String
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.As
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.As
  id: As
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: As
  nameWithType: ExcelDataValidation.As
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.As
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: As
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 543
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nUs this property to case <xref href=\"OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation\" data-throw-if-not-resolved=\"false\"></xref>s to its subtypes\n"
  example: []
  syntax:
    content: public ExcelDataValidationAsType As { get; }
    parameters: []
    return:
      type: OfficeOpenXml.DataValidation.ExcelDataValidationAsType
    content.vb: Public ReadOnly Property As As ExcelDataValidationAsType
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.As*
  implements:
  - OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.As
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.SetValue``1(System.Nullable{``0},System.String)
  commentId: M:OfficeOpenXml.DataValidation.ExcelDataValidation.SetValue``1(System.Nullable{``0},System.String)
  id: SetValue``1(System.Nullable{``0},System.String)
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: SetValue<T>(Nullable<T>, String)
  nameWithType: ExcelDataValidation.SetValue<T>(Nullable<T>, String)
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.SetValue<T>(System.Nullable<T>, System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetValue
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 562
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nSets the value to the supplied path\n"
  example: []
  syntax:
    content: >-
      protected void SetValue<T>(T? val, string path)
          where T : struct
    parameters:
    - id: val
      type: System.Nullable{{T}}
      description: The value to set
    - id: path
      type: System.String
      description: xml path
    typeParameters:
    - id: T
      description: ''
    content.vb: Protected Sub SetValue(Of T As Structure)(val As T?, path As String)
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.SetValue*
  nameWithType.vb: ExcelDataValidation.SetValue(Of T)(Nullable(Of T), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: OfficeOpenXml.DataValidation.ExcelDataValidation.SetValue(Of T)(System.Nullable(Of T), System.String)
  name.vb: SetValue(Of T)(Nullable(Of T), String)
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula1Path
  commentId: M:OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula1Path
  id: GetFormula1Path
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: GetFormula1Path()
  nameWithType: ExcelDataValidation.GetFormula1Path()
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula1Path()
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetFormula1Path
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 577
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nReturns the <xref href=\"OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal\" data-throw-if-not-resolved=\"false\"></xref> xml path\n"
  example: []
  syntax:
    content: protected string GetFormula1Path()
    return:
      type: System.String
      description: ''
    content.vb: Protected Function GetFormula1Path As String
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula1Path*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula2Path
  commentId: M:OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula2Path
  id: GetFormula2Path
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  langs:
  - csharp
  - vb
  name: GetFormula2Path()
  nameWithType: ExcelDataValidation.GetFormula2Path()
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula2Path()
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelDataValidation.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetFormula2Path
    path: ../src/EPPlus/DataValidation/ExcelDataValidation.cs
    startLine: 585
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nReturns the <xref href=\"OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal\" data-throw-if-not-resolved=\"false\"></xref> xml path\n"
  example: []
  syntax:
    content: protected string GetFormula2Path()
    return:
      type: System.String
      description: ''
    content.vb: Protected Function GetFormula2Path As String
  overload: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula2Path*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: OfficeOpenXml.DataValidation
  commentId: N:OfficeOpenXml.DataValidation
  name: OfficeOpenXml.DataValidation
  nameWithType: OfficeOpenXml.DataValidation
  fullName: OfficeOpenXml.DataValidation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  commentId: T:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  parent: OfficeOpenXml.DataValidation.Contracts
  name: IExcelDataValidation
  nameWithType: IExcelDataValidation
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.DataValidation.Contracts
  commentId: N:OfficeOpenXml.DataValidation.Contracts
  name: OfficeOpenXml.DataValidation.Contracts
  nameWithType: OfficeOpenXml.DataValidation.Contracts
  fullName: OfficeOpenXml.DataValidation.Contracts
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#IsStale*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.OfficeOpenXml#DataValidation#Contracts#IExcelDataValidation#IsStale
  name: IExcelDataValidation.IsStale
  nameWithType: ExcelDataValidation.IExcelDataValidation.IsStale
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
  nameWithType.vb: ExcelDataValidation.OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
  name.vb: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: IsStale
  nameWithType: IExcelDataValidation.IsStale
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.IsStale
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.SetNullableBoolValue*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.SetNullableBoolValue
  name: SetNullableBoolValue
  nameWithType: ExcelDataValidation.SetNullableBoolValue
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.SetNullableBoolValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Validate*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.Validate
  name: Validate
  nameWithType: ExcelDataValidation.Validate
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Validate
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Validate
  commentId: M:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Validate
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: Validate()
  nameWithType: IExcelDataValidation.Validate()
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Validate()
  spec.csharp:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Validate
    name: Validate
    nameWithType: IExcelDataValidation.Validate
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Validate
    name: Validate
    nameWithType: IExcelDataValidation.Validate
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowsOperator*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.AllowsOperator
  name: AllowsOperator
  nameWithType: ExcelDataValidation.AllowsOperator
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowsOperator
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.AllowsOperator
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.AllowsOperator
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: AllowsOperator
  nameWithType: IExcelDataValidation.AllowsOperator
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.AllowsOperator
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Uid*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.Uid
  name: Uid
  nameWithType: ExcelDataValidation.Uid
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Uid
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Uid
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Uid
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: Uid
  nameWithType: IExcelDataValidation.Uid
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Uid
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Address*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.Address
  name: Address
  nameWithType: ExcelDataValidation.Address
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Address
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Address
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Address
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: Address
  nameWithType: IExcelDataValidation.Address
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Address
- uid: OfficeOpenXml.ExcelAddress
  commentId: T:OfficeOpenXml.ExcelAddress
  parent: OfficeOpenXml
  name: ExcelAddress
  nameWithType: ExcelAddress
  fullName: OfficeOpenXml.ExcelAddress
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ValidationType*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.ValidationType
  name: ValidationType
  nameWithType: ExcelDataValidation.ValidationType
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ValidationType
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ValidationType
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ValidationType
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: ValidationType
  nameWithType: IExcelDataValidation.ValidationType
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ValidationType
- uid: OfficeOpenXml.DataValidation.ExcelDataValidationType
  commentId: T:OfficeOpenXml.DataValidation.ExcelDataValidationType
  parent: OfficeOpenXml.DataValidation
  name: ExcelDataValidationType
  nameWithType: ExcelDataValidationType
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidationType
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Operator*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.Operator
  name: Operator
  nameWithType: ExcelDataValidation.Operator
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Operator
- uid: OfficeOpenXml.DataValidation.ExcelDataValidationOperator
  commentId: T:OfficeOpenXml.DataValidation.ExcelDataValidationOperator
  parent: OfficeOpenXml.DataValidation
  name: ExcelDataValidationOperator
  nameWithType: ExcelDataValidationOperator
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidationOperator
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorStyle*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorStyle
  name: ErrorStyle
  nameWithType: ExcelDataValidation.ErrorStyle
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorStyle
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ErrorStyle
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ErrorStyle
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: ErrorStyle
  nameWithType: IExcelDataValidation.ErrorStyle
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ErrorStyle
- uid: OfficeOpenXml.DataValidation.ExcelDataValidationWarningStyle
  commentId: T:OfficeOpenXml.DataValidation.ExcelDataValidationWarningStyle
  parent: OfficeOpenXml.DataValidation
  name: ExcelDataValidationWarningStyle
  nameWithType: ExcelDataValidationWarningStyle
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidationWarningStyle
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowBlank*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.AllowBlank
  name: AllowBlank
  nameWithType: ExcelDataValidation.AllowBlank
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.AllowBlank
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.AllowBlank
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.AllowBlank
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: AllowBlank
  nameWithType: IExcelDataValidation.AllowBlank
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.AllowBlank
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowInputMessage*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.ShowInputMessage
  name: ShowInputMessage
  nameWithType: ExcelDataValidation.ShowInputMessage
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowInputMessage
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ShowInputMessage
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ShowInputMessage
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: ShowInputMessage
  nameWithType: IExcelDataValidation.ShowInputMessage
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ShowInputMessage
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowErrorMessage*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.ShowErrorMessage
  name: ShowErrorMessage
  nameWithType: ExcelDataValidation.ShowErrorMessage
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ShowErrorMessage
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ShowErrorMessage
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ShowErrorMessage
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: ShowErrorMessage
  nameWithType: IExcelDataValidation.ShowErrorMessage
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ShowErrorMessage
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorTitle*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorTitle
  name: ErrorTitle
  nameWithType: ExcelDataValidation.ErrorTitle
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.ErrorTitle
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ErrorTitle
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ErrorTitle
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: ErrorTitle
  nameWithType: IExcelDataValidation.ErrorTitle
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.ErrorTitle
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Error*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.Error
  name: Error
  nameWithType: ExcelDataValidation.Error
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Error
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Error
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Error
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: Error
  nameWithType: IExcelDataValidation.Error
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Error
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.PromptTitle*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.PromptTitle
  name: PromptTitle
  nameWithType: ExcelDataValidation.PromptTitle
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.PromptTitle
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.PromptTitle
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.PromptTitle
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: PromptTitle
  nameWithType: IExcelDataValidation.PromptTitle
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.PromptTitle
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Prompt*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.Prompt
  name: Prompt
  nameWithType: ExcelDataValidation.Prompt
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Prompt
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Prompt
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Prompt
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: Prompt
  nameWithType: IExcelDataValidation.Prompt
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.Prompt
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal
  name: Formula1Internal
  nameWithType: ExcelDataValidation.Formula1Internal
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal
  name: Formula2Internal
  nameWithType: ExcelDataValidation.Formula2Internal
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.As*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.As
  name: As
  nameWithType: ExcelDataValidation.As
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.As
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.As
  commentId: P:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.As
  parent: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  name: As
  nameWithType: IExcelDataValidation.As
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation.As
- uid: OfficeOpenXml.DataValidation.ExcelDataValidationAsType
  commentId: T:OfficeOpenXml.DataValidation.ExcelDataValidationAsType
  parent: OfficeOpenXml.DataValidation
  name: ExcelDataValidationAsType
  nameWithType: ExcelDataValidationAsType
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidationAsType
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.SetValue*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.SetValue
  name: SetValue
  nameWithType: ExcelDataValidation.SetValue
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.SetValue
- uid: System.Nullable{{T}}
  commentId: T:System.Nullable{``0}
  parent: System
  definition: System.Nullable`1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  name: Formula1Internal
  nameWithType: ExcelDataValidation.Formula1Internal
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula1Internal
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula1Path*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula1Path
  name: GetFormula1Path
  nameWithType: ExcelDataValidation.GetFormula1Path
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula1Path
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation
  commentId: T:OfficeOpenXml.DataValidation.ExcelDataValidation
  parent: OfficeOpenXml.DataValidation
  name: ExcelDataValidation
  nameWithType: ExcelDataValidation
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal
  commentId: P:OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal
  parent: OfficeOpenXml.DataValidation.ExcelDataValidation
  name: Formula2Internal
  nameWithType: ExcelDataValidation.Formula2Internal
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.Formula2Internal
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula2Path*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula2Path
  name: GetFormula2Path
  nameWithType: ExcelDataValidation.GetFormula2Path
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation.GetFormula2Path

### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection
  commentId: T:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection
  id: ExcelExLstDataValidationCollection
  parent: OfficeOpenXml.DataValidation
  children:
  - OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation``1(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{``0})
  - OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation``1(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{``0})
  - OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.GetEnumerator
  - OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.IsEmpty
  - OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.Remove(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)
  - OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ExcelExLstDataValidationCollection
  nameWithType: ExcelExLstDataValidationCollection
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection
  type: Class
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelExLstDataValidationCollection
    path: ../src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nData validations for the ext lst (x14) section\n"
  example: []
  syntax:
    content: 'public class ExcelExLstDataValidationCollection : XmlHelper, IEnumerable<IExcelDataValidation>, IEnumerable'
    content.vb: >-
      Public Class ExcelExLstDataValidationCollection
          Inherits XmlHelper
          Implements IEnumerable(Of IExcelDataValidation), IEnumerable
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation``1(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{``0})
  commentId: M:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation``1(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{``0})
  id: AddValidation``1(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{``0})
  parent: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection
  langs:
  - csharp
  - vb
  name: AddValidation<T>(IExcelDataValidationWithFormula<T>)
  nameWithType: ExcelExLstDataValidationCollection.AddValidation<T>(IExcelDataValidationWithFormula<T>)
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation<T>(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula<T>)
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddValidation
    path: ../src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
    startLine: 137
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nAdds a validation\n"
  example: []
  syntax:
    content: >-
      public IExcelDataValidationWithFormula<T> AddValidation<T>(IExcelDataValidationWithFormula<T> item)
          where T : IExcelDataValidationFormula
    parameters:
    - id: item
      type: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{{T}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{{T}}
      description: ''
    content.vb: Public Function AddValidation(Of T As IExcelDataValidationFormula)(item As IExcelDataValidationWithFormula(Of T)) As IExcelDataValidationWithFormula(Of T)
  overload: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation*
  nameWithType.vb: ExcelExLstDataValidationCollection.AddValidation(Of T)(IExcelDataValidationWithFormula(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation(Of T)(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula(Of T))
  name.vb: AddValidation(Of T)(IExcelDataValidationWithFormula(Of T))
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation``1(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{``0})
  commentId: M:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation``1(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{``0})
  id: AddValidation``1(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{``0})
  parent: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection
  langs:
  - csharp
  - vb
  name: AddValidation<T>(IExcelDataValidationWithFormula2<T>)
  nameWithType: ExcelExLstDataValidationCollection.AddValidation<T>(IExcelDataValidationWithFormula2<T>)
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation<T>(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2<T>)
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddValidation
    path: ../src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
    startLine: 157
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nAdds a validation\n"
  example: []
  syntax:
    content: >-
      public IExcelDataValidationWithFormula2<T> AddValidation<T>(IExcelDataValidationWithFormula2<T> item)
          where T : IExcelDataValidationFormula
    parameters:
    - id: item
      type: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{{T}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{{T}}
      description: ''
    content.vb: Public Function AddValidation(Of T As IExcelDataValidationFormula)(item As IExcelDataValidationWithFormula2(Of T)) As IExcelDataValidationWithFormula2(Of T)
  overload: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation*
  nameWithType.vb: ExcelExLstDataValidationCollection.AddValidation(Of T)(IExcelDataValidationWithFormula2(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation(Of T)(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2(Of T))
  name.vb: AddValidation(Of T)(IExcelDataValidationWithFormula2(Of T))
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.IsEmpty
  commentId: P:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.IsEmpty
  id: IsEmpty
  parent: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: ExcelExLstDataValidationCollection.IsEmpty
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.IsEmpty
  type: Property
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IsEmpty
    path: ../src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
    startLine: 169
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nReturns true if the list is empty\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.IsEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.Remove(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)
  commentId: M:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.Remove(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)
  id: Remove(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)
  parent: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection
  langs:
  - csharp
  - vb
  name: Remove(IExcelDataValidation)
  nameWithType: ExcelExLstDataValidationCollection.Remove(IExcelDataValidation)
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.Remove(OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Remove
    path: ../src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
    startLine: 183
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nRemoves an <xref href=\"OfficeOpenXml.DataValidation.ExcelDataValidation\" data-throw-if-not-resolved=\"false\"></xref> from the collection.\n"
  example: []
  syntax:
    content: public bool Remove(IExcelDataValidation item)
    parameters:
    - id: item
      type: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
      description: The item to remove
    return:
      type: System.Boolean
      description: True if remove succeeds, otherwise false
    content.vb: Public Function Remove(item As IExcelDataValidation) As Boolean
  overload: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: if <code data-dev-comment-type="paramref" class="paramref">item</code> is null
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.GetEnumerator
  commentId: M:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.GetEnumerator
  id: GetEnumerator
  parent: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ExcelExLstDataValidationCollection.GetEnumerator()
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetEnumerator
    path: ../src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
    startLine: 201
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public IEnumerator<IExcelDataValidation> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator As IEnumerator(Of IExcelDataValidation)
  overload: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelExLstDataValidationCollection.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/EPPlus/DataValidation/ExcelExLstDataValidationCollection.cs
    startLine: 210
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.DataValidation
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ExcelExLstDataValidationCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: OfficeOpenXml.DataValidation
  commentId: N:OfficeOpenXml.DataValidation
  name: OfficeOpenXml.DataValidation
  nameWithType: OfficeOpenXml.DataValidation
  fullName: OfficeOpenXml.DataValidation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IExcelDataValidation>
  nameWithType: IEnumerable<IExcelDataValidation>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation>
  nameWithType.vb: IEnumerable(Of IExcelDataValidation)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)
  name.vb: IEnumerable(Of IExcelDataValidation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
    name: IExcelDataValidation
    nameWithType: IExcelDataValidation
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
    name: IExcelDataValidation
    nameWithType: IExcelDataValidation
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation
  name: AddValidation
  nameWithType: ExcelExLstDataValidationCollection.AddValidation
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.AddValidation
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{{T}}
  commentId: T:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula{``0}
  parent: OfficeOpenXml.DataValidation.Contracts
  definition: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula`1
  name: IExcelDataValidationWithFormula<T>
  nameWithType: IExcelDataValidationWithFormula<T>
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula<T>
  nameWithType.vb: IExcelDataValidationWithFormula(Of T)
  fullName.vb: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula(Of T)
  name.vb: IExcelDataValidationWithFormula(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula`1
    name: IExcelDataValidationWithFormula
    nameWithType: IExcelDataValidationWithFormula
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula`1
    name: IExcelDataValidationWithFormula
    nameWithType: IExcelDataValidationWithFormula
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula`1
  commentId: T:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula`1
  name: IExcelDataValidationWithFormula<T>
  nameWithType: IExcelDataValidationWithFormula<T>
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula<T>
  nameWithType.vb: IExcelDataValidationWithFormula(Of T)
  fullName.vb: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula(Of T)
  name.vb: IExcelDataValidationWithFormula(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula`1
    name: IExcelDataValidationWithFormula
    nameWithType: IExcelDataValidationWithFormula
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula`1
    name: IExcelDataValidationWithFormula
    nameWithType: IExcelDataValidationWithFormula
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.DataValidation.Contracts
  commentId: N:OfficeOpenXml.DataValidation.Contracts
  name: OfficeOpenXml.DataValidation.Contracts
  nameWithType: OfficeOpenXml.DataValidation.Contracts
  fullName: OfficeOpenXml.DataValidation.Contracts
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{{T}}
  commentId: T:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2{``0}
  parent: OfficeOpenXml.DataValidation.Contracts
  definition: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2`1
  name: IExcelDataValidationWithFormula2<T>
  nameWithType: IExcelDataValidationWithFormula2<T>
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2<T>
  nameWithType.vb: IExcelDataValidationWithFormula2(Of T)
  fullName.vb: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2(Of T)
  name.vb: IExcelDataValidationWithFormula2(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2`1
    name: IExcelDataValidationWithFormula2
    nameWithType: IExcelDataValidationWithFormula2
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2`1
    name: IExcelDataValidationWithFormula2
    nameWithType: IExcelDataValidationWithFormula2
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2`1
  commentId: T:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2`1
  name: IExcelDataValidationWithFormula2<T>
  nameWithType: IExcelDataValidationWithFormula2<T>
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2<T>
  nameWithType.vb: IExcelDataValidationWithFormula2(Of T)
  fullName.vb: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2(Of T)
  name.vb: IExcelDataValidationWithFormula2(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2`1
    name: IExcelDataValidationWithFormula2
    nameWithType: IExcelDataValidationWithFormula2
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2`1
    name: IExcelDataValidationWithFormula2
    nameWithType: IExcelDataValidationWithFormula2
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidationWithFormula2
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.IsEmpty*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.IsEmpty
  name: IsEmpty
  nameWithType: ExcelExLstDataValidationCollection.IsEmpty
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.DataValidation.ExcelDataValidation
  commentId: T:OfficeOpenXml.DataValidation.ExcelDataValidation
  parent: OfficeOpenXml.DataValidation
  name: ExcelDataValidation
  nameWithType: ExcelDataValidation
  fullName: OfficeOpenXml.DataValidation.ExcelDataValidation
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.Remove*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.Remove
  name: Remove
  nameWithType: ExcelExLstDataValidationCollection.Remove
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.Remove
- uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  commentId: T:OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  parent: OfficeOpenXml.DataValidation.Contracts
  name: IExcelDataValidation
  nameWithType: IExcelDataValidation
  fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.GetEnumerator*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: ExcelExLstDataValidationCollection.GetEnumerator
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IExcelDataValidation>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IExcelDataValidation).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IExcelDataValidation>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IExcelDataValidation).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}
  commentId: T:System.Collections.Generic.IEnumerator{OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<IExcelDataValidation>
  nameWithType: IEnumerator<IExcelDataValidation>
  fullName: System.Collections.Generic.IEnumerator<OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation>
  nameWithType.vb: IEnumerator(Of IExcelDataValidation)
  fullName.vb: System.Collections.Generic.IEnumerator(Of OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation)
  name.vb: IEnumerator(Of IExcelDataValidation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
    name: IExcelDataValidation
    nameWithType: IExcelDataValidation
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
    name: IExcelDataValidation
    nameWithType: IExcelDataValidation
    fullName: OfficeOpenXml.DataValidation.Contracts.IExcelDataValidation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ExcelExLstDataValidationCollection.IEnumerable.GetEnumerator
  fullName: OfficeOpenXml.DataValidation.ExcelExLstDataValidationCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ExcelExLstDataValidationCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator

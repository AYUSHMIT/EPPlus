### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy
  commentId: T:OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy
  id: CompileStrategy
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
  children:
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.#ctor(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy._expression
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.Compile
  langs:
  - csharp
  - vb
  name: CompileStrategy
  nameWithType: CompileStrategy
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExpressionGraph/CompileStrategy/CompileStrategy.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CompileStrategy
    path: ../src/EPPlus/FormulaParsing/ExpressionGraph/CompileStrategy/CompileStrategy.cs
    startLine: 19
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
  syntax:
    content: public abstract class CompileStrategy
    content.vb: Public MustInherit Class CompileStrategy
  inheritance:
  - System.Object
  derivedClasses:
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.DefaultCompileStrategy
  - OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.StringConcatStrategy
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy._expression
  commentId: F:OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy._expression
  id: _expression
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy
  langs:
  - csharp
  - vb
  name: _expression
  nameWithType: CompileStrategy._expression
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy._expression
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExpressionGraph/CompileStrategy/CompileStrategy.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: _expression
    path: ../src/EPPlus/FormulaParsing/ExpressionGraph/CompileStrategy/CompileStrategy.cs
    startLine: 21
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
  syntax:
    content: protected readonly Expression _expression
    return:
      type: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
    content.vb: Protected ReadOnly _expression As Expression
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.#ctor(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  commentId: M:OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.#ctor(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  id: '#ctor(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)'
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy
  langs:
  - csharp
  - vb
  name: CompileStrategy(Expression)
  nameWithType: CompileStrategy.CompileStrategy(Expression)
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.CompileStrategy(OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExpressionGraph/CompileStrategy/CompileStrategy.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/ExpressionGraph/CompileStrategy/CompileStrategy.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
  syntax:
    content: public CompileStrategy(Expression expression)
    parameters:
    - id: expression
      type: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
    content.vb: Public Sub New(expression As Expression)
  overload: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.Compile
  commentId: M:OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.Compile
  id: Compile
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy
  langs:
  - csharp
  - vb
  name: Compile()
  nameWithType: CompileStrategy.Compile()
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.Compile()
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExpressionGraph/CompileStrategy/CompileStrategy.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Compile
    path: ../src/EPPlus/FormulaParsing/ExpressionGraph/CompileStrategy/CompileStrategy.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
  syntax:
    content: public abstract Expression Compile()
    return:
      type: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
    content.vb: Public MustOverride Function Compile As Expression
  overload: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.Compile*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
  commentId: N:OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
  name: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
  nameWithType: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
  commentId: T:OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
  parent: OfficeOpenXml.FormulaParsing.ExpressionGraph
  name: Expression
  nameWithType: Expression
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.Expression
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph
  commentId: N:OfficeOpenXml.FormulaParsing.ExpressionGraph
  name: OfficeOpenXml.FormulaParsing.ExpressionGraph
  nameWithType: OfficeOpenXml.FormulaParsing.ExpressionGraph
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.#ctor*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.#ctor
  name: CompileStrategy
  nameWithType: CompileStrategy.CompileStrategy
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.CompileStrategy
- uid: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.Compile*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.Compile
  name: Compile
  nameWithType: CompileStrategy.Compile
  fullName: OfficeOpenXml.FormulaParsing.ExpressionGraph.CompileStrategy.CompileStrategy.Compile
